<?php

/**
 * Payload_Service_Account_Update Model
 *
 * @copyright (c) 2022-2023 kronup.io
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://php.kronup.io/
 *
 * NOTE: This class is auto-generated by Kronup
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Payload_Service_Account_Update Model
 * 
 * Payload object required to update a Service Account
 */
class PayloadServiceAccountUpdate extends AbstractModel {

    public const _D = null;
    public const ROLE_ORG_ADMIN = 'admin';
    public const ROLE_ORG_MEMBER = 'member';
    protected static $_name = "Payload_Service_Account_Update";
    protected static $_definition = [
        "roleOrg" => ["roleOrg", "string", null, "getRoleOrg", "setRoleOrg", null, ["r" => 0, "e" => 1]], 
        "userName" => ["userName", "string", null, "getUserName", "setUserName", null, ["r" => 0, "nl" => 3, "xl" => 64]]
    ];

    /**
     * PayloadServiceAccountUpdate
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }

    /**
     * Get allowable values
     *
     * @return string[]
     */
    public function getRoleOrgAllowableValues(): array {
        return [
            self::ROLE_ORG_ADMIN,
            self::ROLE_ORG_MEMBER,
        ];
    }

    /**
     * Get roleOrg - Service Account organization role
     *
     * @return string|null
     */
    public function getRoleOrg(): ?string {
        return $this->_data["roleOrg"];
    }

    /**
     * Set roleOrg - Service Account organization role
     * 
     * @param string|null $role_org Service Account organization role
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setRoleOrg($role_org) {
        return $this->_set("roleOrg", $role_org);
    }

    /**
     * Get userName - Service account name
     *
     * @return string|null
     */
    public function getUserName(): ?string {
        return $this->_data["userName"];
    }

    /**
     * Set userName - Service account name
     * 
     * @param string|null $user_name Service account name
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setUserName($user_name) {
        return $this->_set("userName", $user_name);
    }
}
