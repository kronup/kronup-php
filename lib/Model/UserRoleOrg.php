<?php

/**
 * User_roleOrg Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * User_roleOrg Model
 */
class UserRoleOrg extends AbstractModel {

    public const _D = null;
    protected static $_name = "User_roleOrg";
    protected static $_definition = [
        "org_id_xxxx" => ["org-id-xxxx", "\Kronup\Model\UserRoleOrgOrgIdXxxx", null, "getOrgIdXxxx", "setOrgIdXxxx", null, ["r" => 0]]
    ];

    /**
     * UserRoleOrg
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get org_id_xxxx
     *
     * @return \Kronup\Model\UserRoleOrgOrgIdXxxx|null
     */
    public function getOrgIdXxxx(): ?\Kronup\Model\UserRoleOrgOrgIdXxxx {
        return $this->_data["org_id_xxxx"];
    }

    /**
     * Set org_id_xxxx
     * 
     * @param \Kronup\Model\UserRoleOrgOrgIdXxxx|null $org_id_xxxx org_id_xxxx
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOrgIdXxxx( $org_id_xxxx) {
        return $this->_set("org_id_xxxx", $org_id_xxxx);
    }
}
