<?php

/**
 * Experience_Evaluations Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Experience_Evaluations Model
 */
class ExperienceEvaluations extends AbstractModel {

    public const _D = null;
    protected static $_name = "Experience_Evaluations";
    protected static $_definition = [
        "n" => ["n", "string", null, "getN", "setN", null, ["r" => 0]], 
        "s" => ["s", "float[]", null, "getS", "setS", null, ["r" => 0, "c" => 1]], 
        "p" => ["p", "float[]", null, "getP", "setP", null, ["r" => 0, "c" => 1]]
    ];

    /**
     * ExperienceEvaluations
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get n - Notion ID
     *
     * @return string|null
     */
    public function getN(): ?string {
        return $this->_data["n"];
    }

    /**
     * Set n - Notion ID
     * 
     * @param string|null $n Notion ID
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setN($n) {
        return $this->_set("n", $n);
    }

    /**
     * Get s - Self-assessments
     *
     * @return float[]|null
     */
    public function getS(): ?array {
        return $this->_data["s"];
    }

    /**
     * Set s - Self-assessments
     * 
     * @param float[]|null $s Self-assessments
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setS(?array $s) {
        return $this->_set("s", $s);
    }

    /**
     * Get p - Peer assessments
     *
     * @return float[]|null
     */
    public function getP(): ?array {
        return $this->_data["p"];
    }

    /**
     * Set p - Peer assessments
     * 
     * @param float[]|null $p Peer assessments
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setP(?array $p) {
        return $this->_set("p", $p);
    }
}
