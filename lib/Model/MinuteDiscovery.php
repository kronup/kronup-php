<?php

/**
 * Minute_Discovery Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Minute_Discovery Model
 */
class MinuteDiscovery extends AbstractModel {

    public const _D = null;
    protected static $_name = "Minute_Discovery";
    protected static $_definition = [
        "iteration" => ["iteration", "float", null, "getIteration", "setIteration", 1, ["r" => 0]], 
        "authorId" => ["authorId", "string", null, "getAuthorId", "setAuthorId", null, ["r" => 0]], 
        "details" => ["details", "string", null, "getDetails", "setDetails", null, ["r" => 0, "nl" => 1, "xl" => 1024]]
    ];

    /**
     * MinuteDiscovery
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get iteration
     *
     * @return float|null
     */
    public function getIteration(): ?float {
        return $this->_data["iteration"];
    }

    /**
     * Set iteration
     * 
     * @param float|null $iteration Iteration number
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setIteration($iteration) {
        return $this->_set("iteration", $iteration);
    }

    /**
     * Get authorId
     *
     * @return string|null
     */
    public function getAuthorId(): ?string {
        return $this->_data["authorId"];
    }

    /**
     * Set authorId
     * 
     * @param string|null $author_id Author ID
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setAuthorId($author_id) {
        return $this->_set("authorId", $author_id);
    }

    /**
     * Get details
     *
     * @return string|null
     */
    public function getDetails(): ?string {
        return $this->_data["details"];
    }

    /**
     * Set details
     * 
     * @param string|null $details Discovery details
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setDetails($details) {
        return $this->_set("details", $details);
    }
}
