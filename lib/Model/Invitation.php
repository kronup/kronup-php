<?php

/**
 * Invitation Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Invitation Model
 */
class Invitation extends AbstractModel {

    public const _D = null;
    protected static $_name = "Invitation";
    protected static $_definition = [
        "id" => ["id", "string", null, "getId", "setId", null, ["r" => 0]], 
        "org_id" => ["orgId", "string", null, "getOrgId", "setOrgId", null, ["r" => 0]], 
        "user_id" => ["userId", "string", null, "getUserId", "setUserId", null, ["r" => 0]], 
        "invite_name" => ["inviteName", "string", null, "getInviteName", "setInviteName", null, ["r" => 0]], 
        "invite_domain" => ["inviteDomain", "string", null, "getInviteDomain", "setInviteDomain", null, ["r" => 0]], 
        "invite_org_role" => ["inviteOrgRole", "string", null, "getInviteOrgRole", "setInviteOrgRole", null, ["r" => 0]], 
        "invite_org_name" => ["inviteOrgName", "string", null, "getInviteOrgName", "setInviteOrgName", null, ["r" => 0]], 
        "invite_uses" => ["inviteUses", "float", null, "getInviteUses", "setInviteUses", null, ["r" => 0]], 
        "invite_uses_max" => ["inviteUsesMax", "float", null, "getInviteUsesMax", "setInviteUsesMax", null, ["r" => 0]], 
        "invite_views" => ["inviteViews", "float", null, "getInviteViews", "setInviteViews", null, ["r" => 0]], 
        "expires_at" => ["expiresAt", "string", null, "getExpiresAt", "setExpiresAt", null, ["r" => 0]], 
        "created_at" => ["createdAt", "string", null, "getCreatedAt", "setCreatedAt", null, ["r" => 0]], 
        "updated_at" => ["updatedAt", "string", null, "getUpdatedAt", "setUpdatedAt", null, ["r" => 0]]
    ];

    /**
     * Invitation
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get id
     *
     * @return string|null
     */
    public function getId(): ?string {
        return $this->_data["id"];
    }

    /**
     * Set id
     * 
     * @param string|null $id id
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setId( $id) {
        return $this->_set("id", $id);
    }

    /**
     * Get org_id
     *
     * @return string|null
     */
    public function getOrgId(): ?string {
        return $this->_data["org_id"];
    }

    /**
     * Set org_id
     * 
     * @param string|null $org_id org_id
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOrgId( $org_id) {
        return $this->_set("org_id", $org_id);
    }

    /**
     * Get user_id
     *
     * @return string|null
     */
    public function getUserId(): ?string {
        return $this->_data["user_id"];
    }

    /**
     * Set user_id
     * 
     * @param string|null $user_id user_id
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setUserId( $user_id) {
        return $this->_set("user_id", $user_id);
    }

    /**
     * Get invite_name
     *
     * @return string|null
     */
    public function getInviteName(): ?string {
        return $this->_data["invite_name"];
    }

    /**
     * Set invite_name
     * 
     * @param string|null $invite_name invite_name
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteName( $invite_name) {
        return $this->_set("invite_name", $invite_name);
    }

    /**
     * Get invite_domain
     *
     * @return string|null
     */
    public function getInviteDomain(): ?string {
        return $this->_data["invite_domain"];
    }

    /**
     * Set invite_domain
     * 
     * @param string|null $invite_domain invite_domain
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteDomain( $invite_domain) {
        return $this->_set("invite_domain", $invite_domain);
    }

    /**
     * Get invite_org_role
     *
     * @return string|null
     */
    public function getInviteOrgRole(): ?string {
        return $this->_data["invite_org_role"];
    }

    /**
     * Set invite_org_role
     * 
     * @param string|null $invite_org_role invite_org_role
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteOrgRole( $invite_org_role) {
        return $this->_set("invite_org_role", $invite_org_role);
    }

    /**
     * Get invite_org_name
     *
     * @return string|null
     */
    public function getInviteOrgName(): ?string {
        return $this->_data["invite_org_name"];
    }

    /**
     * Set invite_org_name
     * 
     * @param string|null $invite_org_name invite_org_name
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteOrgName( $invite_org_name) {
        return $this->_set("invite_org_name", $invite_org_name);
    }

    /**
     * Get invite_uses
     *
     * @return float|null
     */
    public function getInviteUses(): ?float {
        return $this->_data["invite_uses"];
    }

    /**
     * Set invite_uses
     * 
     * @param float|null $invite_uses invite_uses
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteUses( $invite_uses) {
        return $this->_set("invite_uses", $invite_uses);
    }

    /**
     * Get invite_uses_max
     *
     * @return float|null
     */
    public function getInviteUsesMax(): ?float {
        return $this->_data["invite_uses_max"];
    }

    /**
     * Set invite_uses_max
     * 
     * @param float|null $invite_uses_max invite_uses_max
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteUsesMax( $invite_uses_max) {
        return $this->_set("invite_uses_max", $invite_uses_max);
    }

    /**
     * Get invite_views
     *
     * @return float|null
     */
    public function getInviteViews(): ?float {
        return $this->_data["invite_views"];
    }

    /**
     * Set invite_views
     * 
     * @param float|null $invite_views invite_views
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setInviteViews( $invite_views) {
        return $this->_set("invite_views", $invite_views);
    }

    /**
     * Get expires_at
     *
     * @return string|null
     */
    public function getExpiresAt(): ?string {
        return $this->_data["expires_at"];
    }

    /**
     * Set expires_at
     * 
     * @param string|null $expires_at expires_at
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setExpiresAt( $expires_at) {
        return $this->_set("expires_at", $expires_at);
    }

    /**
     * Get created_at
     *
     * @return string|null
     */
    public function getCreatedAt(): ?string {
        return $this->_data["created_at"];
    }

    /**
     * Set created_at
     * 
     * @param string|null $created_at created_at
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setCreatedAt( $created_at) {
        return $this->_set("created_at", $created_at);
    }

    /**
     * Get updated_at
     *
     * @return string|null
     */
    public function getUpdatedAt(): ?string {
        return $this->_data["updated_at"];
    }

    /**
     * Set updated_at
     * 
     * @param string|null $updated_at updated_at
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setUpdatedAt( $updated_at) {
        return $this->_set("updated_at", $updated_at);
    }
}
