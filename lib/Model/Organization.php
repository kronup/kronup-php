<?php

/**
 * Organization Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Organization Model
 */
class Organization extends AbstractModel {

    public const _D = null;
    protected static $_name = "Organization";
    protected static $_definition = [
        "id" => ["id", "string", null, "getId", "setId", null, ["r" => 0]], 
        "org_name" => ["orgName", "string", null, "getOrgName", "setOrgName", null, ["r" => 0]], 
        "org_icon" => ["orgIcon", "string", null, "getOrgIcon", "setOrgIcon", null, ["r" => 0]], 
        "org_owners" => ["orgOwners", "string[]", null, "getOrgOwners", "setOrgOwners", null, ["r" => 0, "c" => 1]], 
        "created_at" => ["createdAt", "string", null, "getCreatedAt", "setCreatedAt", null, ["r" => 0]], 
        "updated_at" => ["updatedAt", "string", null, "getUpdatedAt", "setUpdatedAt", null, ["r" => 0]]
    ];

    /**
     * Organization
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get id
     *
     * @return string|null
     */
    public function getId(): ?string {
        return $this->_data["id"];
    }

    /**
     * Set id
     * 
     * @param string|null $id id
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setId( $id) {
        return $this->_set("id", $id);
    }

    /**
     * Get org_name
     *
     * @return string|null
     */
    public function getOrgName(): ?string {
        return $this->_data["org_name"];
    }

    /**
     * Set org_name
     * 
     * @param string|null $org_name org_name
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOrgName( $org_name) {
        return $this->_set("org_name", $org_name);
    }

    /**
     * Get org_icon
     *
     * @return string|null
     */
    public function getOrgIcon(): ?string {
        return $this->_data["org_icon"];
    }

    /**
     * Set org_icon
     * 
     * @param string|null $org_icon org_icon
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOrgIcon( $org_icon) {
        return $this->_set("org_icon", $org_icon);
    }

    /**
     * Get org_owners
     *
     * @return string[]|null
     */
    public function getOrgOwners(): ?array {
        return $this->_data["org_owners"];
    }

    /**
     * Set org_owners
     * 
     * @param string[]|null $org_owners org_owners
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setOrgOwners(?array $org_owners) {
        return $this->_set("org_owners", $org_owners);
    }

    /**
     * Get created_at
     *
     * @return string|null
     */
    public function getCreatedAt(): ?string {
        return $this->_data["created_at"];
    }

    /**
     * Set created_at
     * 
     * @param string|null $created_at created_at
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setCreatedAt( $created_at) {
        return $this->_set("created_at", $created_at);
    }

    /**
     * Get updated_at
     *
     * @return string|null
     */
    public function getUpdatedAt(): ?string {
        return $this->_data["updated_at"];
    }

    /**
     * Set updated_at
     * 
     * @param string|null $updated_at updated_at
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setUpdatedAt( $updated_at) {
        return $this->_set("updated_at", $updated_at);
    }
}
