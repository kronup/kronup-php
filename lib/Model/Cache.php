<?php

/**
 * Cache Model
 *
 * @copyright (c) 2022-2023 kronup.com
 * @license   Apache 2.0
 * @package   Kronup
 * @author    Mark Jivko
 * @link      https://kronup.com/
 *
 * NOTE: This class is auto-generated by kronup.com
 * Do not edit this file manually!
 */

namespace Kronup\Model;
!defined("KRONUP-SDK") && exit();

/**
 * Cache Model
 */
class Cache extends AbstractModel {

    public const _D = null;
    protected static $_name = "Cache";
    protected static $_definition = [
        "id" => ["id", "string", null, "getId", "setId", null, ["r" => 0]], 
        "value" => ["value", "string", null, "getValue", "setValue", null, ["r" => 0]], 
        "expires_at" => ["expiresAt", "string", null, "getExpiresAt", "setExpiresAt", null, ["r" => 0]]
    ];

    /**
     * Cache
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }


    /**
     * Get id
     *
     * @return string|null
     */
    public function getId(): ?string {
        return $this->_data["id"];
    }

    /**
     * Set id
     * 
     * @param string|null $id Item ID
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setId( $id) {
        return $this->_set("id", $id);
    }

    /**
     * Get value
     *
     * @return string|null
     */
    public function getValue(): ?string {
        return $this->_data["value"];
    }

    /**
     * Set value
     * 
     * @param string|null $value Item value
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setValue( $value) {
        return $this->_set("value", $value);
    }

    /**
     * Get expires_at
     *
     * @return string|null
     */
    public function getExpiresAt(): ?string {
        return $this->_data["expires_at"];
    }

    /**
     * Set expires_at
     * 
     * @param string|null $expires_at Expiration timestamp
     * @throws \InvalidArgumentException
     * @return $this
     */
    public function setExpiresAt( $expires_at) {
        return $this->_set("expires_at", $expires_at);
    }
}
